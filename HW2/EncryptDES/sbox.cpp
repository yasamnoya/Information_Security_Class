#include "DES.h"
Subdata_4 DES:: s_box(Subdata_6 input, int interval)
{
	typedef vector<Subdata_4> sboxrow;
	vector<sboxrow> sbox;
	sboxrow temp;
	Subdata_4 bittemp;
	switch(interval)
	{
	case 1:
		bittemp = { 1,1,1,0 }; temp.push_back(bittemp);
		bittemp = { 0,1,0,0 }; temp.push_back(bittemp);
		bittemp = { 1,1,0,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,0,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,1,1,1 }; temp.push_back(bittemp);
		bittemp = { 1,0,1,1 }; temp.push_back(bittemp);
		bittemp = { 1,0,0,0 }; temp.push_back(bittemp);
		bittemp = { 0,0,1,1 }; temp.push_back(bittemp);
		bittemp = { 1,0,1,0 }; temp.push_back(bittemp);
		bittemp = { 0,1,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,1,0,0 }; temp.push_back(bittemp);
		bittemp = { 0,1,0,1 }; temp.push_back(bittemp);
		bittemp = { 1,0,0,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,0,0 }; temp.push_back(bittemp);
		bittemp = { 0,1,1,1 }; temp.push_back(bittemp);
		sbox.push_back(temp);
		temp.clear();
		bittemp = { 0,0,0,0 }; temp.push_back(bittemp);
		bittemp = { 1,1,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,1,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,1,0,0 }; temp.push_back(bittemp);
		bittemp = { 1,1,1,0 }; temp.push_back(bittemp);
		bittemp = { 0,0,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,1,0,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,0,1 }; temp.push_back(bittemp);
		bittemp = { 1,0,1,0 }; temp.push_back(bittemp);
		bittemp = { 0,1,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,1,0,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,1,1 }; temp.push_back(bittemp);
		bittemp = { 1,0,0,1 }; temp.push_back(bittemp);
		bittemp = { 0,1,0,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,1,1 }; temp.push_back(bittemp);
		bittemp = { 1,0,0,0 }; temp.push_back(bittemp);
		sbox.push_back(temp);
		temp.clear();
		bittemp = { 0,1,0,0 }; temp.push_back(bittemp);
		bittemp = { 0,0,0,1 }; temp.push_back(bittemp);
		bittemp = { 1,1,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,0,0 }; temp.push_back(bittemp);
		bittemp = { 1,1,0,1 }; temp.push_back(bittemp);
		bittemp = { 0,1,1,0 }; temp.push_back(bittemp);
		bittemp = { 0,0,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,1,1 }; temp.push_back(bittemp);
		bittemp = { 1,1,1,1 }; temp.push_back(bittemp);
		bittemp = { 1,1,0,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,0,1 }; temp.push_back(bittemp);
		bittemp = { 0,1,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,1,1 }; temp.push_back(bittemp);
		bittemp = { 1,0,1,0 }; temp.push_back(bittemp);
		bittemp = { 0,1,0,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,0,0 }; temp.push_back(bittemp);
		sbox.push_back(temp);
		temp.clear();
		bittemp = { 1,1,1,1 }; temp.push_back(bittemp);
		bittemp = { 1,1,0,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,0,0 }; temp.push_back(bittemp);
		bittemp = { 0,0,1,0 }; temp.push_back(bittemp);
		bittemp = { 0,1,0,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,0,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,0,1 }; temp.push_back(bittemp);
		bittemp = { 0,1,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,1,0,1 }; temp.push_back(bittemp);
		bittemp = { 1,0,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,1,1 }; temp.push_back(bittemp);
		bittemp = { 1,1,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,1,0 }; temp.push_back(bittemp);
		bittemp = { 0,0,0,0 }; temp.push_back(bittemp);
		bittemp = { 0,1,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,1,0,1 }; temp.push_back(bittemp);
		sbox.push_back(temp);
		temp.clear();
		break;
	case 2:
		bittemp = { 1,1,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,0,1 }; temp.push_back(bittemp);
		bittemp = { 1,0,0,0 }; temp.push_back(bittemp);
		bittemp = { 1,1,1,0 }; temp.push_back(bittemp);
		bittemp = { 0,1,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,1,0,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,0,1 }; temp.push_back(bittemp);
		bittemp = { 0,1,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,1,0,1 }; temp.push_back(bittemp);
		bittemp = { 1,1,0,0 }; temp.push_back(bittemp);
		bittemp = { 0,0,0,0 }; temp.push_back(bittemp);
		bittemp = { 0,1,0,1 }; temp.push_back(bittemp);
		bittemp = { 1,0,1,0 }; temp.push_back(bittemp);
		sbox.push_back(temp);
		temp.clear();
		bittemp = { 0,0,1,1 }; temp.push_back(bittemp);
		bittemp = { 1,1,0,1 }; temp.push_back(bittemp);
		bittemp = { 0,1,0,0 }; temp.push_back(bittemp);
		bittemp = { 0,1,1,1 }; temp.push_back(bittemp);
		bittemp = { 1,1,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,0,0 }; temp.push_back(bittemp);
		bittemp = { 1,1,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,1,0,0 }; temp.push_back(bittemp);
		bittemp = { 0,0,0,0 }; temp.push_back(bittemp);
		bittemp = { 0,0,0,1 }; temp.push_back(bittemp);
		bittemp = { 1,0,1,0 }; temp.push_back(bittemp);
		bittemp = { 0,1,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,0,1 }; temp.push_back(bittemp);
		bittemp = { 1,0,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,1,0,1 }; temp.push_back(bittemp);
		sbox.push_back(temp);
		temp.clear();
		bittemp = { 0,0,0,0 }; temp.push_back(bittemp);
		bittemp = { 1,1,1,0 }; temp.push_back(bittemp);
		bittemp = { 0,1,1,1 }; temp.push_back(bittemp);
		bittemp = { 1,0,1,1 }; temp.push_back(bittemp);
		bittemp = { 1,0,1,0 }; temp.push_back(bittemp);
		bittemp = { 0,1,0,0 }; temp.push_back(bittemp);
		bittemp = { 1,1,0,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,0,1 }; temp.push_back(bittemp);
		bittemp = { 0,1,0,1 }; temp.push_back(bittemp);
		bittemp = { 1,0,0,0 }; temp.push_back(bittemp);
		bittemp = { 1,1,0,0 }; temp.push_back(bittemp);
		bittemp = { 0,1,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,0,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,1,1,1 }; temp.push_back(bittemp);
		sbox.push_back(temp);
		temp.clear();
		bittemp = { 1,1,0,1 }; temp.push_back(bittemp);
		bittemp = { 1,0,0,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,1,0 }; temp.push_back(bittemp);
		bittemp = { 0,0,0,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,1,1 }; temp.push_back(bittemp);
		bittemp = { 1,1,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,1,0,0 }; temp.push_back(bittemp);
		bittemp = { 0,0,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,1,1,0 }; temp.push_back(bittemp);
		bittemp = { 0,1,1,1 }; temp.push_back(bittemp);
		bittemp = { 1,1,0,0 }; temp.push_back(bittemp);
		bittemp = { 0,0,0,0 }; temp.push_back(bittemp);
		bittemp = { 0,1,0,1 }; temp.push_back(bittemp);
		bittemp = { 1,1,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,0,1 }; temp.push_back(bittemp);
		sbox.push_back(temp);
		temp.clear();
		break;
	case 3:
		bittemp = { 1,0,1,0 }; temp.push_back(bittemp);
		bittemp = { 0,0,0,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,0,1 }; temp.push_back(bittemp);
		bittemp = { 1,1,1,0 }; temp.push_back(bittemp);
		bittemp = { 0,1,1,0 }; temp.push_back(bittemp);
		bittemp = { 0,0,1,1 }; temp.push_back(bittemp);
		bittemp = { 1,1,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,1,0,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,0,1 }; temp.push_back(bittemp);
		bittemp = { 1,1,0,1 }; temp.push_back(bittemp);
		bittemp = { 1,1,0,0 }; temp.push_back(bittemp);
		bittemp = { 0,1,1,1 }; temp.push_back(bittemp);
		bittemp = { 1,0,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,1,0,0 }; temp.push_back(bittemp);
		bittemp = { 0,0,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,0,0 }; temp.push_back(bittemp);
		sbox.push_back(temp);
		temp.clear();
		bittemp = { 1,1,0,1 }; temp.push_back(bittemp);
		bittemp = { 0,1,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,0,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,0,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,1,0,0 }; temp.push_back(bittemp);
		bittemp = { 0,1,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,1,0 }; temp.push_back(bittemp);
		bittemp = { 0,0,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,0,0 }; temp.push_back(bittemp);
		bittemp = { 0,1,0,1 }; temp.push_back(bittemp);
		bittemp = { 1,1,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,1,0,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,1,1 }; temp.push_back(bittemp);
		bittemp = { 1,1,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,0,1 }; temp.push_back(bittemp);
		sbox.push_back(temp);
		temp.clear();
		bittemp = { 1,1,0,1 }; temp.push_back(bittemp);
		bittemp = { 0,1,1,0 }; temp.push_back(bittemp);
		bittemp = { 0,1,0,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,0,1 }; temp.push_back(bittemp);
		bittemp = { 1,0,0,0 }; temp.push_back(bittemp);
		bittemp = { 1,1,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,0,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,0,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,1,0,0 }; temp.push_back(bittemp);
		bittemp = { 0,1,0,1 }; temp.push_back(bittemp);
		bittemp = { 1,0,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,1,1,0 }; temp.push_back(bittemp);
		bittemp = { 0,1,1,1 }; temp.push_back(bittemp);
		sbox.push_back(temp);
		temp.clear();
		bittemp = { 0,0,0,1 }; temp.push_back(bittemp);
		bittemp = { 1,0,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,1,0,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,0,0 }; temp.push_back(bittemp);
		bittemp = { 0,1,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,0,1 }; temp.push_back(bittemp);
		bittemp = { 1,0,0,0 }; temp.push_back(bittemp);
		bittemp = { 0,1,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,1,0,0 }; temp.push_back(bittemp);
		bittemp = { 1,1,1,1 }; temp.push_back(bittemp);
		bittemp = { 1,1,1,0 }; temp.push_back(bittemp);
		bittemp = { 0,0,1,1 }; temp.push_back(bittemp);
		bittemp = { 1,0,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,1,0,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,1,0,0 }; temp.push_back(bittemp);
		sbox.push_back(temp);
		temp.clear();
		break;
	case 4:
		bittemp = { 0,1,1,1 }; temp.push_back(bittemp);
		bittemp = { 1,1,0,1 }; temp.push_back(bittemp);
		bittemp = { 1,1,1,0 }; temp.push_back(bittemp);
		bittemp = { 0,0,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,0,0 }; temp.push_back(bittemp);
		bittemp = { 0,1,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,0,1 }; temp.push_back(bittemp);
		bittemp = { 1,0,1,0 }; temp.push_back(bittemp);
		bittemp = { 0,0,0,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,0,0 }; temp.push_back(bittemp);
		bittemp = { 0,1,0,1 }; temp.push_back(bittemp);
		bittemp = { 1,0,1,1 }; temp.push_back(bittemp);
		bittemp = { 1,1,0,0 }; temp.push_back(bittemp);
		bittemp = { 0,1,0,0 }; temp.push_back(bittemp);
		bittemp = { 1,1,1,1 }; temp.push_back(bittemp);
		sbox.push_back(temp);
		temp.clear();
		bittemp = { 1,1,0,1 }; temp.push_back(bittemp);
		bittemp = { 1,0,0,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,1,0,1 }; temp.push_back(bittemp);
		bittemp = { 0,1,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,1,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,0,0 }; temp.push_back(bittemp);
		bittemp = { 0,0,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,1,0,0 }; temp.push_back(bittemp);
		bittemp = { 0,1,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,1,0,0 }; temp.push_back(bittemp);
		bittemp = { 0,0,0,1 }; temp.push_back(bittemp);
		bittemp = { 1,0,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,1,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,0,1 }; temp.push_back(bittemp);
		sbox.push_back(temp);
		temp.clear();
		bittemp = { 1,0,1,0 }; temp.push_back(bittemp);
		bittemp = { 0,1,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,0,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,0,0 }; temp.push_back(bittemp);
		bittemp = { 1,1,0,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,1,1,1 }; temp.push_back(bittemp);
		bittemp = { 1,1,0,1 }; temp.push_back(bittemp);
		bittemp = { 1,1,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,0,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,1,1 }; temp.push_back(bittemp);
		bittemp = { 1,1,1,0 }; temp.push_back(bittemp);
		bittemp = { 0,1,0,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,0,0 }; temp.push_back(bittemp);
		bittemp = { 0,1,0,0 }; temp.push_back(bittemp);
		sbox.push_back(temp);
		temp.clear();
		bittemp = { 0,0,1,1 }; temp.push_back(bittemp);
		bittemp = { 1,1,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,0,0 }; temp.push_back(bittemp);
		bittemp = { 0,1,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,1,0 }; temp.push_back(bittemp);
		bittemp = { 0,0,0,1 }; temp.push_back(bittemp);
		bittemp = { 1,1,0,1 }; temp.push_back(bittemp);
		bittemp = { 1,0,0,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,0,1 }; temp.push_back(bittemp);
		bittemp = { 0,1,0,0 }; temp.push_back(bittemp);
		bittemp = { 0,1,0,1 }; temp.push_back(bittemp);
		bittemp = { 1,0,1,1 }; temp.push_back(bittemp);
		bittemp = { 1,1,0,0 }; temp.push_back(bittemp);
		bittemp = { 0,1,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,1,1,0 }; temp.push_back(bittemp);
		sbox.push_back(temp);
		temp.clear();
		break;
	case 5:
		bittemp = { 0,0,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,1,0,0 }; temp.push_back(bittemp);
		bittemp = { 0,1,0,0 }; temp.push_back(bittemp);
		bittemp = { 0,0,0,1 }; temp.push_back(bittemp);
		bittemp = { 0,1,1,1 }; temp.push_back(bittemp);
		bittemp = { 1,0,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,1,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,0,0 }; temp.push_back(bittemp);
		bittemp = { 0,1,0,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,1,1 }; temp.push_back(bittemp);
		bittemp = { 1,1,1,1 }; temp.push_back(bittemp);
		bittemp = { 1,1,0,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,0,0 }; temp.push_back(bittemp);
		bittemp = { 1,1,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,0,1 }; temp.push_back(bittemp);
		sbox.push_back(temp);
		temp.clear();
		bittemp = { 1,1,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,1,0,0 }; temp.push_back(bittemp);
		bittemp = { 0,1,0,0 }; temp.push_back(bittemp);
		bittemp = { 0,1,1,1 }; temp.push_back(bittemp);
		bittemp = { 1,1,0,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,0,1 }; temp.push_back(bittemp);
		bittemp = { 0,1,0,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,0,0 }; temp.push_back(bittemp);
		bittemp = { 1,1,1,1 }; temp.push_back(bittemp);
		bittemp = { 1,0,1,0 }; temp.push_back(bittemp);
		bittemp = { 0,0,1,1 }; temp.push_back(bittemp);
		bittemp = { 1,0,0,1 }; temp.push_back(bittemp);
		bittemp = { 1,0,0,0 }; temp.push_back(bittemp);
		bittemp = { 0,1,1,0 }; temp.push_back(bittemp);
		sbox.push_back(temp);
		temp.clear();
		bittemp = { 0,1,0,0 }; temp.push_back(bittemp);
		bittemp = { 0,0,1,0 }; temp.push_back(bittemp);
		bittemp = { 0,0,0,1 }; temp.push_back(bittemp);
		bittemp = { 1,0,1,1 }; temp.push_back(bittemp);
		bittemp = { 1,0,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,1,0,1 }; temp.push_back(bittemp);
		bittemp = { 0,1,1,1 }; temp.push_back(bittemp);
		bittemp = { 1,0,0,0 }; temp.push_back(bittemp);
		bittemp = { 1,1,1,1 }; temp.push_back(bittemp);
		bittemp = { 1,0,0,1 }; temp.push_back(bittemp);
		bittemp = { 1,1,0,0 }; temp.push_back(bittemp);
		bittemp = { 0,1,0,1 }; temp.push_back(bittemp);
		bittemp = { 0,1,1,0 }; temp.push_back(bittemp);
		bittemp = { 0,0,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,0,0 }; temp.push_back(bittemp);
		bittemp = { 1,1,1,0 }; temp.push_back(bittemp);
		sbox.push_back(temp);
		temp.clear();
		bittemp = { 1,0,1,1 }; temp.push_back(bittemp);
		bittemp = { 1,0,0,0 }; temp.push_back(bittemp);
		bittemp = { 1,1,0,0 }; temp.push_back(bittemp);
		bittemp = { 0,1,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,0,1 }; temp.push_back(bittemp);
		bittemp = { 1,1,1,0 }; temp.push_back(bittemp);
		bittemp = { 0,0,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,1,0,1 }; temp.push_back(bittemp);
		bittemp = { 0,1,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,1,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,0,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,0,1 }; temp.push_back(bittemp);
		bittemp = { 1,0,1,0 }; temp.push_back(bittemp);
		bittemp = { 0,1,0,0 }; temp.push_back(bittemp);
		bittemp = { 0,1,0,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,1,1 }; temp.push_back(bittemp);
		sbox.push_back(temp);
		temp.clear();
		break;
	case 6:
		bittemp = { 1,1,0,0 }; temp.push_back(bittemp);
		bittemp = { 0,0,0,1 }; temp.push_back(bittemp);
		bittemp = { 1,0,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,1,1,1 }; temp.push_back(bittemp);
		bittemp = { 1,0,0,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,1,0 }; temp.push_back(bittemp);
		bittemp = { 0,1,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,0,0 }; temp.push_back(bittemp);
		bittemp = { 0,0,0,0 }; temp.push_back(bittemp);
		bittemp = { 1,1,0,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,1,0,0 }; temp.push_back(bittemp);
		bittemp = { 1,1,1,0 }; temp.push_back(bittemp);
		bittemp = { 0,1,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,1,0,1 }; temp.push_back(bittemp);
		bittemp = { 1,0,1,1 }; temp.push_back(bittemp);
		sbox.push_back(temp);
		temp.clear();
		bittemp = { 1,0,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,1,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,1,0,0 }; temp.push_back(bittemp);
		bittemp = { 0,0,1,0 }; temp.push_back(bittemp);
		bittemp = { 0,1,1,1 }; temp.push_back(bittemp);
		bittemp = { 1,1,0,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,0,1 }; temp.push_back(bittemp);
		bittemp = { 0,1,0,1 }; temp.push_back(bittemp);
		bittemp = { 0,1,1,0 }; temp.push_back(bittemp);
		bittemp = { 0,0,0,1 }; temp.push_back(bittemp);
		bittemp = { 1,1,0,1 }; temp.push_back(bittemp);
		bittemp = { 1,1,1,0 }; temp.push_back(bittemp);
		bittemp = { 0,0,0,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,1,1 }; temp.push_back(bittemp);
		bittemp = { 1,0,0,0 }; temp.push_back(bittemp);
		sbox.push_back(temp);
		temp.clear();
		bittemp = { 1,0,0,1 }; temp.push_back(bittemp);
		bittemp = { 1,1,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,1,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,1,0,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,0,0 }; temp.push_back(bittemp);
		bittemp = { 1,1,0,0 }; temp.push_back(bittemp);
		bittemp = { 0,0,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,1,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,0,0 }; temp.push_back(bittemp);
		bittemp = { 0,1,0,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,1,0 }; temp.push_back(bittemp);
		bittemp = { 0,0,0,1 }; temp.push_back(bittemp);
		bittemp = { 1,1,0,1 }; temp.push_back(bittemp);
		bittemp = { 1,0,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,1,1,0 }; temp.push_back(bittemp);
		sbox.push_back(temp);
		temp.clear();
		bittemp = { 0,1,0,0 }; temp.push_back(bittemp);
		bittemp = { 0,0,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,1,0,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,0,1 }; temp.push_back(bittemp);
		bittemp = { 0,1,0,1 }; temp.push_back(bittemp);
		bittemp = { 1,1,1,1 }; temp.push_back(bittemp);
		bittemp = { 1,0,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,1,1 }; temp.push_back(bittemp);
		bittemp = { 1,1,1,0 }; temp.push_back(bittemp);
		bittemp = { 0,0,0,1 }; temp.push_back(bittemp);
		bittemp = { 0,1,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,1,1,0 }; temp.push_back(bittemp);
		bittemp = { 0,0,0,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,0,0 }; temp.push_back(bittemp);
		bittemp = { 1,1,0,1 }; temp.push_back(bittemp);
		sbox.push_back(temp);
		temp.clear();
		break;
	case 7:
		bittemp = { 0,1,0,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,1,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,1,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,0,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,0,0 }; temp.push_back(bittemp);
		bittemp = { 1,1,0,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,1,1 }; temp.push_back(bittemp);
		bittemp = { 1,1,0,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,0,1 }; temp.push_back(bittemp);
		bittemp = { 0,1,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,1,0,1 }; temp.push_back(bittemp);
		bittemp = { 1,0,1,0 }; temp.push_back(bittemp);
		bittemp = { 0,1,1,0 }; temp.push_back(bittemp);
		bittemp = { 0,0,0,1 }; temp.push_back(bittemp);
		sbox.push_back(temp);
		temp.clear();
		bittemp = { 1,1,0,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,0,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,1,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,1,0,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,0,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,0,1 }; temp.push_back(bittemp);
		bittemp = { 1,0,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,1,1,0 }; temp.push_back(bittemp);
		bittemp = { 0,0,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,1,0,1 }; temp.push_back(bittemp);
		bittemp = { 1,1,0,0 }; temp.push_back(bittemp);
		bittemp = { 0,0,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,1,1,1 }; temp.push_back(bittemp);
		bittemp = { 1,0,0,0 }; temp.push_back(bittemp);
		bittemp = { 0,1,1,0 }; temp.push_back(bittemp);
		sbox.push_back(temp);
		temp.clear();
		bittemp = { 0,0,0,1 }; temp.push_back(bittemp);
		bittemp = { 0,1,0,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,1,1 }; temp.push_back(bittemp);
		bittemp = { 1,1,0,1 }; temp.push_back(bittemp);
		bittemp = { 1,1,0,0 }; temp.push_back(bittemp);
		bittemp = { 0,0,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,1,1,1 }; temp.push_back(bittemp);
		bittemp = { 1,1,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,1,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,1,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,0,0 }; temp.push_back(bittemp);
		bittemp = { 0,0,0,0 }; temp.push_back(bittemp);
		bittemp = { 0,1,0,1 }; temp.push_back(bittemp);
		bittemp = { 1,0,0,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,1,0 }; temp.push_back(bittemp);
		sbox.push_back(temp);
		temp.clear();
		bittemp = { 0,1,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,1,1 }; temp.push_back(bittemp);
		bittemp = { 1,1,0,1 }; temp.push_back(bittemp);
		bittemp = { 1,0,0,0 }; temp.push_back(bittemp);
		bittemp = { 0,0,0,1 }; temp.push_back(bittemp);
		bittemp = { 0,1,0,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,1,0 }; temp.push_back(bittemp);
		bittemp = { 0,1,1,1 }; temp.push_back(bittemp);
		bittemp = { 1,0,0,1 }; temp.push_back(bittemp);
		bittemp = { 0,1,0,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,0,0 }; temp.push_back(bittemp);
		bittemp = { 1,1,1,1 }; temp.push_back(bittemp);
		bittemp = { 1,1,1,0 }; temp.push_back(bittemp);
		bittemp = { 0,0,1,0 }; temp.push_back(bittemp);
		bittemp = { 0,0,1,1 }; temp.push_back(bittemp);
		bittemp = { 1,1,0,0 }; temp.push_back(bittemp);
		sbox.push_back(temp);
		temp.clear();
		break;
	case 8:
		bittemp = { 1,1,0,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,0,0 }; temp.push_back(bittemp);
		bittemp = { 0,1,0,0 }; temp.push_back(bittemp);
		bittemp = { 0,1,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,1,1,1 }; temp.push_back(bittemp);
		bittemp = { 1,0,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,0,1 }; temp.push_back(bittemp);
		bittemp = { 1,0,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,0,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,1,1 }; temp.push_back(bittemp);
		bittemp = { 1,1,1,0 }; temp.push_back(bittemp);
		bittemp = { 0,1,0,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,0,0 }; temp.push_back(bittemp);
		bittemp = { 1,1,0,0 }; temp.push_back(bittemp);
		bittemp = { 0,1,1,1 }; temp.push_back(bittemp);
		sbox.push_back(temp);
		temp.clear();
		bittemp = { 0,0,0,1 }; temp.push_back(bittemp);
		bittemp = { 1,1,1,1 }; temp.push_back(bittemp);
		bittemp = { 1,1,0,1 }; temp.push_back(bittemp);
		bittemp = { 1,0,0,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,1,0 }; temp.push_back(bittemp);
		bittemp = { 0,0,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,1,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,1,0,0 }; temp.push_back(bittemp);
		bittemp = { 1,1,0,0 }; temp.push_back(bittemp);
		bittemp = { 0,1,0,1 }; temp.push_back(bittemp);
		bittemp = { 0,1,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,0,0 }; temp.push_back(bittemp);
		bittemp = { 1,1,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,0,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,1,0 }; temp.push_back(bittemp);
		sbox.push_back(temp);
		temp.clear();
		bittemp = { 0,1,1,1 }; temp.push_back(bittemp);
		bittemp = { 1,0,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,1,0,0 }; temp.push_back(bittemp);
		bittemp = { 0,0,0,1 }; temp.push_back(bittemp);
		bittemp = { 1,0,0,1 }; temp.push_back(bittemp);
		bittemp = { 1,1,0,0 }; temp.push_back(bittemp);
		bittemp = { 1,1,1,0 }; temp.push_back(bittemp);
		bittemp = { 0,0,1,0 }; temp.push_back(bittemp);
		bittemp = { 0,0,0,0 }; temp.push_back(bittemp);
		bittemp = { 0,1,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,1,0,1 }; temp.push_back(bittemp);
		bittemp = { 1,1,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,1,0,1 }; temp.push_back(bittemp);
		bittemp = { 1,0,0,0 }; temp.push_back(bittemp);
		sbox.push_back(temp);
		temp.clear();
		bittemp = { 0,0,1,0 }; temp.push_back(bittemp);
		bittemp = { 0,0,0,1 }; temp.push_back(bittemp);
		bittemp = { 1,1,1,0 }; temp.push_back(bittemp);
		bittemp = { 0,1,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,1,0,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,0,0 }; temp.push_back(bittemp);
		bittemp = { 1,1,0,1 }; temp.push_back(bittemp);
		bittemp = { 1,1,1,1 }; temp.push_back(bittemp);
		bittemp = { 1,1,0,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,0,1 }; temp.push_back(bittemp);
		bittemp = { 0,0,0,0 }; temp.push_back(bittemp);
		bittemp = { 0,0,1,1 }; temp.push_back(bittemp);
		bittemp = { 0,1,0,1 }; temp.push_back(bittemp);
		bittemp = { 0,1,1,0 }; temp.push_back(bittemp);
		bittemp = { 1,0,1,1 }; temp.push_back(bittemp);
		sbox.push_back(temp);
		temp.clear();
		break;
	default:
		break;
	}
	int x, y;
	x = input[0] * 2 + input[5] * 1;
	y = input[1] * 8 + input[2] * 4 + input[3] * 2 + input[4] * 1;
	bittemp = sbox[x][y];
	return bittemp;
}
